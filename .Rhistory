funs <- c("https://raw.githubusercontent.com/Mar-Scal/Assessment_fns/master/Maps/pectinid_projector_sf.R",
"https://raw.githubusercontent.com/Mar-Scal/Assessment_fns/master/Maps/convert_inla_mesh_to_sf.R",
"https://raw.githubusercontent.com/Mar-scal/Assessment_fns/master/Maps/centre_of_gravity.R",
"https://raw.githubusercontent.com/Mar-scal/Assessment_fns/master/Maps/convert_coords.R",
"https://raw.githubusercontent.com/Mar-scal/Assessment_fns/master/Maps/add_alpha_function.R")
# Now run through a quick loop to load each one, just be sure that your working directory is read/write!
for(fun in funs)
{
download.file(fun,destfile = basename(fun))
source(paste0(getwd(),"/",basename(fun)))
file.remove(paste0(getwd(),"/",basename(fun)))
}
library(tidyverse)
# Run pecjector, there is something super busted happening with Pecjector and offshore figures
#source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="Ger",c_sys = c_sys,axes = NULL)
source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="Ger",c_sys = c_sys,axes = NULL)
source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="Ger",c_sys = c_sys,axes = NULL)
pect_plot
b.box
pect_plot + coord_sf(expand=F)
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL)
pect_plot
pect_plot + coord_sf(expand=F)
pect_plot
p <- pecjector(area ="BBn",c_sys = c_sys,axes = NULL)
pect_plot + coord_sf(expand=F)
p <- pecjector(area ="SPA4",c_sys = c_sys,axes = NULL)
pect_plot
pect_plot + coord_sf(expand=F)
p <- pecjector(area ="Sab",c_sys = c_sys,axes = NULL)
pect_plot + coord_sf(expand=F)
p <- pecjector(area ="Sab",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assesment_fns')
p <- pecjector(area ="Sab",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assesment_fns/')
p <- pecjector(area ="Sab",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assesment_fns/')
p <- pecjector(area ="Sab",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assesment_fns')
source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
p <- pecjector(area ="Sab",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assesment_fns')
source(paste(repo,"/Maps/convert_coords.R",sep=""))
source(paste(repo,"/Maps/add_alpha_function.R",sep=""))
source(paste(repo,"/Maps/combo_shp.R",sep=""))
source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="Sab",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="Sab",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
#NL, Offshore, Ger still busted.
source(paste(repo,"/Maps/convert_coords.R",sep=""))
# Run pecjector, there is something super busted happening with Pecjector and offshore figures
source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="Sab",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="Sab",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot + coord_sf(expand=F)
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="Ger",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot
pect_plot + coord_sf(expand=F)
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="Ger",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot + coord_sf(expand=F)
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot
pect_plot + coord_sf(expand=F)
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="offshore",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot + coord_sf(expand=F)
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot + coord_sf(expand=F)
b.box
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot + coord_sf(expand=F)
pect_plot
b.box
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot
pect_plot + coord_sf(expand=F)
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot
pect_plot + coord_sf(expand=F)
b.box
pect_plot
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot
pect_plot + coord_sf(expand=F)
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot + coord_sf(expand=F)
pect_plot
pect_plot + coord_sf(expand=F)
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot + coord_sf(expand=F)
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot + coord_sf(expand=F)
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot + coord_sf(expand=F)
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
pect_plot + coord_sf(expand=F)
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = NULL,repo = 'D:/Github/Assessment_fns')
source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
c_sys <- 32619
ax = "DMS"
p <- pecjector(area ="29W",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
convert.dd.dddd(lon.loc,'deg.min.sec')
source("D:/Github/Assessment_fns/Survey_and_OSAC/convert.dd.dddd.r")
convert.dd.dddd(lon.loc,'deg.min.sec')
source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
c_sys <- 32619
ax = "DMS"
p <- pecjector(area ="29W",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
convert.dd.dddd(lon.loc,'deg.min.sec')
c_sys <- 32619
ax = "DMS"
p <- pecjector(area ="29W",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
c_sys <- 32619
ax = "DMS"
p <- pecjector(area ="29W",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="29W",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="SPA3",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="SPA6",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
c_sys <- 32619
ax = "DMS"
p <- pecjector(area ="NL",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="29W",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="29W",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
pect_plot + scale_x_continuous(breaks =lon.loc,labels=parse(text = lon.disp))
pect_plot + scale_x_continuous(breaks =lon.loc,labels=parse(text = lon.disp)) +
scale_y_continuous(breaks = lat.loc,labels=parse(text = lat.disp))
lat.loc
lat.disp
pect_plot
source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="29W",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="SPA3",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
30/60
35/60
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="SPA3",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="BoF",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
p <- pecjector(area ="ESS",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="Sab",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="WOB",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
c_sys <- 32619
ax = "DMS"
p <- pecjector(area ="WOB",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
source("D:/Github/Assessment_fns/Maps/pectinid_projector_sf.R")
c_sys <- 32619
ax = "DMS"
p <- pecjector(area ="WSS",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="WSS",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="WOB",c_sys = c_sys,axes = ax,repo = 'D:/Github/Assessment_fns')
# Bring in our in house functions. First combine them all in a vector
funs <- c("https://raw.githubusercontent.com/Mar-Scal/Assessment_fns/master/Maps/pectinid_projector_sf.R",
"https://raw.githubusercontent.com/Mar-Scal/Assessment_fns/master/Maps/convert_inla_mesh_to_sf.R",
"https://raw.githubusercontent.com/Mar-scal/Assessment_fns/master/Maps/centre_of_gravity.R",
"https://raw.githubusercontent.com/Mar-scal/Assessment_fns/master/Maps/convert_coords.R",
"https://raw.githubusercontent.com/Mar-scal/Assessment_fns/master/Maps/add_alpha_function.R")
# Now run through a quick loop to load each one, just be sure that your working directory is read/write!
for(fun in funs)
{
download.file(fun,destfile = basename(fun))
source(paste0(getwd(),"/",basename(fun)))
file.remove(paste0(getwd(),"/",basename(fun)))
}
c_sys <- 4326
ax = "DMS"
p <- pecjector(area ="WOB",c_sys = c_sys,axes = ax)
p <- pecjector(area ="29W",c_sys = c_sys,axes = ax)
p <- pecjector(area ="NL",c_sys = c_sys,axes = ax)
ax = "DM"
p <- pecjector(area ="NL",c_sys = c_sys,axes = ax)
p <- pecjector(area ="Offshore",c_sys = c_sys,axes = ax)
c_sys <- 32619
ax = "DM"
p <- pecjector(area ="Offshore",c_sys = c_sys,axes = ax)
c_sys <- 4326
ax = "DM"
p <- pecjector(area ="Offshore",c_sys = c_sys,axes = ax)
p <- pecjector(area ="Offshore",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="SS",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="SS",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="ESS",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="WSS",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="BBn",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="BBs",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="BB",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="GB",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="GBa",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="GBb",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="Ger",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="Ger",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="Sab",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="SPB",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="SPB-banks",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="West-banks",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="West",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="Mid",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="Ban",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="GOM",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="GOM",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="SFA29",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="GM",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="inshore",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="BoF",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="upper",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="Mid Bay",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="spa3",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="spa4",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="spa1",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="spa4",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="spa41",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="spa1",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="spa1",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="spa1",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="spa6",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="spa1A",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="spa1B",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
p <- pecjector(area ="spa5",c_sys = c_sys,axes = ax,repo = "D:/Github/Assessment_fns")
# Bring in our in house functions. First combine them all in a vector
funs <- c("https://raw.githubusercontent.com/Mar-Scal/Assessment_fns/master/Maps/pectinid_projector_sf.R",
"https://raw.githubusercontent.com/Mar-Scal/Assessment_fns/master/Maps/convert_inla_mesh_to_sf.R",
"https://raw.githubusercontent.com/Mar-scal/Assessment_fns/master/Maps/centre_of_gravity.R",
"https://raw.githubusercontent.com/Mar-scal/Assessment_fns/master/Maps/convert_coords.R",
"https://raw.githubusercontent.com/Mar-scal/Assessment_fns/master/Maps/add_alpha_function.R")
# Now run through a quick loop to load each one, just be sure that your working directory is read/write!
for(fun in funs)
{
download.file(fun,destfile = basename(fun))
source(paste0(getwd(),"/",basename(fun)))
file.remove(paste0(getwd(),"/",basename(fun)))
}
p <- pecjector(area ="spa1",c_sys = c_sys,axes = ax)
c_sys <- 4326
ax = "DM"
p <- pecjector(area ="spa1",c_sys = c_sys,axes = ax)
p <- pecjector(area ="Offshore",c_sys = c_sys,axes = ax)
p <- pecjector(area ="WOB",c_sys = c_sys,axes = ax)
c_sys <- 32619
ax = "DM"
p <- pecjector(area ="WOB",c_sys = c_sys,axes = ax)
c_sys <- 32619
ax = "DMS"
p <- pecjector(area ="WOB",c_sys = c_sys,axes = ax)
0.05*24
# Here's a function to calculate the weighted mean (center of gravity) in 1 or two dimensionas along with the standard deviation
# Adapted from SDMTools package but just using standard weighted mean and weighted variance calcs...
# You only need to specify one of x or y.  This could fairly easily be generalized to be an n-dimensional COG if the need ever arose...
# Arguements:
## The general mapping inputs if you are just wanting to produce a spatial map without an INLA surface
#1: x     The locations of your data in the 'x' direction, a vector.  missing by default
#2: y     The locations of the data in the 'y' direction, a vector.  missing by default
#3: wt    The weigths for your x and y data. In 2-D this assumes your weighting is the same in each direction
#           (i.e. think a coordinate with a weighting value associated with it)
cog.calc <- function(x,y,wt)
{
if(!missing(x))
{
wt.mean.x <- x * wt
cog.x <- sum(wt.mean.x) / sum(wt)
sd.x <- sqrt(sum(wt) / (sum(wt)^2 - sum(wt^2) ) * (sum(wt * (x - cog.x)^2)))
se.x <-  sd.x/sqrt(length(wt))
sum(wt * (wt.mean.x - cog.x)^2)/ (sum(wt))#^2 - sum(wt^2)))#
if(missing(y)) return(data.frame(x = cog.x, y = NA,sd.x  = sd.x,sd.y = NA,se.x  = se.x,se.y = NA))
}
if(!missing(y))
{
wt.mean.y <- y * wt
cog.y <- sum(wt.mean.y) / sum(wt)
sd.y <- sqrt(sum(wt) / (sum(wt)^2 - sum(wt^2) ) * (sum(wt * (y - cog.y)^2)))
se.y <- sd.y /sqrt(length(wt))
if(missing(x)) return(data.frame(x = NA, y = cog.y,sd.x  = NA,sd.y = sd.y,se.x  = NA,se.y = se.y))
}
# This will only happen if both x and y are not missing...
return(data.frame(x = cog.x, y = cog.y,sd.x  = sd.x,sd.y  = sd.y,se.x  = se.x,se.y = se.y))
} # end cog.fun <- function(x,y,wt)
library(sf)
?sf
nc
fname
fname <- system.file("shape/nc.shp", package="sf")
fname
nc <- st_read(fname)
nc
fname <- system.file("shape/nc.shp", package="sf")
fname
nc <- st_read(fname)
tmp <- nc %>%  mutate(lon = unlist(map(locs$geometry,1)),
lat = unlist(map(locs$geometry,2)))
fname <- system.file("shape/nc.shp", package="sf")
fname
nc <- st_read(fname)
tmp <- nc %>%  mutate(lon = unlist(map(nc$geometry,1)),
lat = unlist(map(nc$geometry,2)))
library(purrr)
tmp <- nc %>%  mutate(lon = unlist(map(nc$geometry,1)),
lat = unlist(map(nc$geometry,2)))
unlist(map(nc$geometry,1))
unlist(map(nc$geometry,2))
nc
pts <- st_sample(nc)
pts <- st_sample(nc,size=200)
pts
pts$cpue <- rlnorm(200,0,1)
pts
pts$cpue
pts <- st_sample(nc,size=200)
pts$cpue <- rlnorm(200,0,1)
pts
pts$cpue
pts <- st_sample(nc,size=200)
pts <- st_as_sf(st_sample(nc,size=200))
pts
pts <- st_as_sf(st_sample(nc,size=200))
pts$cpue <- rlnorm(200,0,1)
pts
pts <- st_as_sf(st_sample(nc,size=200))
pts$cpue <- rlnorm(200,0,1)
tmp <- nc %>%  mutate(lon = unlist(map(nc$x,1)),
lat = unlist(map(nc$x,2)))
tmp
pts <- st_as_sf(st_sample(nc,size=200))
pts$cpue <- rlnorm(200,0,1)
tmp <- pts %>%  mutate(lon = unlist(map(pts$x,1)),
lat = unlist(map(pts$x,2)))
tmp
dat <- pts %>%  mutate(lon = unlist(map(pts$x,1)),
lat = unlist(map(pts$x,2)))
mod <- cog.calc(x=dat$lon, y=dat$lat,wt = dat$cpue)
mod
library(sf)
library(purrr)
# Load COG from repo
funs <- c("https://raw.githubusercontent.com/Dave-Keith/Assessment_fns/master/Maps/centre_of_gravity.R")
download.file(funs,destfile = basename(funs))
source(paste0(getwd(),"/",basename(funs)))
file.remove(paste0(getwd(),"/",basename(funs)))
fname <- system.file("shape/nc.shp", package="sf")
fname
nc <- st_read(fname)
nc
pts <- st_as_sf(st_sample(nc,size=2000))
pts$cpue <- rlnorm(200,0,1)
dat <- pts %>%  mutate(lon = unlist(map(pts$x,1)),
lat = unlist(map(pts$x,2)))
dat
library(sf)
library(purrr)
library(tidyverse)
library(sf)
library(purrr)
library(tidyverse)
# Load COG from repo
funs <- c("https://raw.githubusercontent.com/Dave-Keith/Assessment_fns/master/Maps/centre_of_gravity.R")
download.file(funs,destfile = basename(funs))
source(paste0(getwd(),"/",basename(funs)))
file.remove(paste0(getwd(),"/",basename(funs)))
fname <- system.file("shape/nc.shp", package="sf")
fname
nc <- st_read(fname)
pts <- st_as_sf(st_sample(nc,size=2000))
pts$cpue <- rlnorm(200,0,1)
dat <- pts %>%  dplyr::mutate(lon = unlist(map(pts$x,1)),
lat = unlist(map(pts$x,2)))
dat
pts
fname
nc
dat <- pts %>%  dplyr::mutate(lon = unlist(map(pts$x,1)),
lat = unlist(map(pts$x,2)))
dat
tst <- data.frame(dat)
tst
tst <- dat %>% st_geometry(NULL)
tst
as.data.frame(dat)
tst <- as.data.frame(dat)[2:4]
tst
dat <- as.data.frame(dat)[2:4]
dat.sf <- st_as_sf(dat,coords = c('lon','lat'))
dat.sf
dat.sf <- st_as_sf(dat,coords = c('lon','lat'),crs = 4326)
dat.sf <- st_transform(dat.sf,crs = 32619) # I think that's right one for ESS
dat.sf
dat.sf <- st_as_sf(dat,coords = c('lon','lat'),crs = 4326)
dat.sf <- st_transform(dat.sf,crs = 32619) # I think that's right one for ESS
dat.sf
dat
dat.sf <- st_as_sf(dat,coords = c('lon','lat'),crs = 4326)
dat.sf
dat.sf <- st_transform(dat.sf,crs = 32619) # I think that's right one for ESS
dat.sf
dat.sf <- st_as_sf(dat,coords = c('lon','lat'),crs = 4326)
dat.sf <- st_transform(dat.sf,crs = 32619) # I think that's right one for ESS
dat.tst <- dat.sf %>%  dplyr::mutate(lon = unlist(map(pts$geometry,1)),
lat = unlist(map(pts$geometry,2)))
dat.tst
dat.sf %>%  dplyr::mutate(X = unlist(map(pts$x,1)),
Y = unlist(map(pts$x,2)))
dat.tst <- dat.sf %>%  dplyr::mutate(X = unlist(map(dat.sf$geometry,1)),
Y = unlist(map(dat.sf$geometry,2)))
dat.tst
N.options
N.options <- read.csv('D:/Github/ICM/Results/options.for.biomass.to.number.animals.NW.csv')
N.options
por.sim.result<-por.sim(n.sims=200, repro.cycle=2,N.options = N.options)
N.options <- read.csv('D:/Github/ICM/Results/options.for.biomass.to.number.animals.NW.csv')
## Load functions
source("D:/Github/ICM/Scripts/functions/por_sim.r")
source("D:/Github/ICM/Scripts/functions/parms_calc.r")
source("D:/Github/ICM/Scripts/functions/u_calc.r")
source("D:/Github/ICM/Scripts/functions/F_crit.r")
source("D:/Github/ICM/Scripts/functions/Lotka_r.r")
# We need to get the N.options object into the por.sim fu
source("D:/Github/ICM/Scripts/functions/por_sim.r")
# Note only have an even number of sims or the code will break as is!
por.sim.result<-por.sim(n.sims=200, repro.cycle=2,N.options = N.options)
setwd('d:/github/ICM/')
## required libraries for Enric's code
library(MASS)
library(popbio)
library(tidyverse)
library(grid)
library(truncnorm)
library(ggplot2)
library(cowplot)
source("D:/Github/ICM/Scripts/functions/por_sim.r")
# Note only have an even number of sims or the code will break as is!
por.sim.result<-por.sim(n.sims=200, repro.cycle=2,N.options = N.options)
source("D:/Github/ICM/Scripts/functions/plot_por_sim.r")
source("D:/Github/ICM/Scripts/functions/standard_SHK.r")
plot.por.sim(repro.cycle = 1)
27*1.15
